name: GitHub Actions Testing
run-name: ${{ github.actor }} is testing GitHub Actions
# Run on push
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      #- run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      #- run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      #- run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      #- name: Check out repository code
        #uses: actions/checkout@v4
      #- run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      #- run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      #- name: List files in the repository
        #run: |
          #ls ${{ github.workspace }}
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Cache Python venv
        id: cache-venv
        uses: actions/cache@v4
        with:
          path: venv
          key: ${{ runner.os }}-venv
      - name: Create Python venv
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          # Show python version
          python -V
          echo "no cache"
          # Show pip cache dir
          #pip cache dir
          python -m venv venv
          . venv/bin/activate
          #pip cache dir
          pip install -q --upgrade pip setuptools wheel
          pip install -q -r requirements.txt
          deactivate
      - name: Use Python venv
        run: |
          # Activate virtual display
          export DISPLAY=:99
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &

          # Activate python virtual environment
          . venv/bin/activate

          python event_test2.py
          
          # Commands can be given just like in script-file
          #python -c "import henxel
          #e=henxel.Editor()
          #print(e.version)"
          
          # Deactivate python virtual environment
          deactivate
      #- run: echo "üçè This job's status is ${{ job.status }}."
